// Mocks generated by Mockito 5.4.4 from annotations
// in notredame/test/features/more/settings/mocks/settings_manager_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Dart imports:
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

// Flutter imports:
import 'package:flutter/material.dart' as _i5;

// Package imports:
import 'package:mockito/mockito.dart' as _i1;

// Project imports:
import 'package:notredame/constants/preferences_flags.dart' as _i4;
import 'package:notredame/features/more/settings/settings_manager.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsManager extends _i1.Mock implements _i2.SettingsManager {
  @override
  DateTime get dateTimeNow => (super.noSuchMethod(
        Invocation.getter(#dateTimeNow),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#dateTimeNow),
        ),
        returnValueForMissingStub: _FakeDateTime_0(
          this,
          Invocation.getter(#dateTimeNow),
        ),
      ) as DateTime);

  @override
  bool get calendarViewSetting => (super.noSuchMethod(
        Invocation.getter(#calendarViewSetting),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void resetLanguageAndThemeMode() => super.noSuchMethod(
        Invocation.method(
          #resetLanguageAndThemeMode,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> fetchLanguageAndThemeMode() => (super.noSuchMethod(
        Invocation.method(
          #fetchLanguageAndThemeMode,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<_i4.PreferencesFlag, int>> getDashboard() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDashboard,
          [],
        ),
        returnValue: _i3.Future<Map<_i4.PreferencesFlag, int>>.value(
            <_i4.PreferencesFlag, int>{}),
        returnValueForMissingStub:
            _i3.Future<Map<_i4.PreferencesFlag, int>>.value(
                <_i4.PreferencesFlag, int>{}),
      ) as _i3.Future<Map<_i4.PreferencesFlag, int>>);

  @override
  void setThemeMode(_i5.ThemeMode? value) => super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLocale(String? value) => super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<Map<_i4.PreferencesFlag, dynamic>> getScheduleSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getScheduleSettings,
          [],
        ),
        returnValue: _i3.Future<Map<_i4.PreferencesFlag, dynamic>>.value(
            <_i4.PreferencesFlag, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<_i4.PreferencesFlag, dynamic>>.value(
                <_i4.PreferencesFlag, dynamic>{}),
      ) as _i3.Future<Map<_i4.PreferencesFlag, dynamic>>);

  @override
  _i3.Future<bool> setString(
    _i4.PreferencesFlag? flag,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            flag,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> setDynamicString(
    _i4.PreferencesFlag? flag,
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDynamicString,
          [
            flag,
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> setInt(
    _i4.PreferencesFlag? flag,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            flag,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> getString(_i4.PreferencesFlag? flag) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [flag],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<String?> getDynamicString(
    _i4.PreferencesFlag? flag,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDynamicString,
          [
            flag,
            key,
          ],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> setBool(
    _i4.PreferencesFlag? flag,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            flag,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool?> getBool(_i4.PreferencesFlag? flag) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [flag],
        ),
        returnValue: _i3.Future<bool?>.value(),
        returnValueForMissingStub: _i3.Future<bool?>.value(),
      ) as _i3.Future<bool?>);

  @override
  int getDefaultCardIndex(_i4.PreferencesFlag? flag) => (super.noSuchMethod(
        Invocation.method(
          #getDefaultCardIndex,
          [flag],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
