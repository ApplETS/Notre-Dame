// Mocks generated by Mockito 5.4.4 from annotations
// in notredame/test/features/app/presentation/rive_animation_service_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notredame/features/app/presentation/rive_animation_service.dart'
    as _i3;
import 'package:rive/rive.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeArtboard_0 extends _i1.SmartFake implements _i2.Artboard {
  _FakeArtboard_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RiveAnimationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRiveAnimationService extends _i1.Mock
    implements _i3.RiveAnimationService {
  @override
  _i4.Future<_i2.Artboard> loadRiveFile({required String? riveFileName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadRiveFile,
          [],
          {#riveFileName: riveFileName},
        ),
        returnValue: _i4.Future<_i2.Artboard>.value(_FakeArtboard_0(
          this,
          Invocation.method(
            #loadRiveFile,
            [],
            {#riveFileName: riveFileName},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Artboard>.value(_FakeArtboard_0(
          this,
          Invocation.method(
            #loadRiveFile,
            [],
            {#riveFileName: riveFileName},
          ),
        )),
      ) as _i4.Future<_i2.Artboard>);

  @override
  void addControllerToAnimation({
    required _i2.Artboard? artboard,
    _i2.RiveAnimationController<dynamic>? controller,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addControllerToAnimation,
          [],
          {
            #artboard: artboard,
            #controller: controller,
          },
        ),
        returnValueForMissingStub: null,
      );
}
