// Mocks generated by Mockito 5.4.4 from annotations
// in notredame/test/features/app/analytics/remote_config_service_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Dart imports:
import 'dart:async' as _i4;

// Package imports:
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

import 'package:notredame/features/app/analytics/remote_config_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RemoteConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteConfigService extends _i1.Mock
    implements _i2.RemoteConfigService {
  @override
  Map<String, dynamic> get defaults => (super.noSuchMethod(
        Invocation.getter(#defaults),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get outage => (super.noSuchMethod(
        Invocation.getter(#outage),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get dashboardMessageActive => (super.noSuchMethod(
        Invocation.getter(#dashboardMessageActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get scheduleListViewDefault => (super.noSuchMethod(
        Invocation.getter(#scheduleListViewDefault),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get privacyPolicyToggle => (super.noSuchMethod(
        Invocation.getter(#privacyPolicyToggle),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get privacyPolicyUrl => (super.noSuchMethod(
        Invocation.getter(#privacyPolicyUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#privacyPolicyUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#privacyPolicyUrl),
        ),
      ) as String);

  @override
  String get dashboardMessageFr => (super.noSuchMethod(
        Invocation.getter(#dashboardMessageFr),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageFr),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageFr),
        ),
      ) as String);

  @override
  String get dashboardMessageEn => (super.noSuchMethod(
        Invocation.getter(#dashboardMessageEn),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageEn),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageEn),
        ),
      ) as String);

  @override
  String get dashboardMessageTitleFr => (super.noSuchMethod(
        Invocation.getter(#dashboardMessageTitleFr),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageTitleFr),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageTitleFr),
        ),
      ) as String);

  @override
  String get dashboardMessageTitleEn => (super.noSuchMethod(
        Invocation.getter(#dashboardMessageTitleEn),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageTitleEn),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMessageTitleEn),
        ),
      ) as String);

  @override
  String get dashboardMsgColor => (super.noSuchMethod(
        Invocation.getter(#dashboardMsgColor),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgColor),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgColor),
        ),
      ) as String);

  @override
  String get dashboardMsgUrl => (super.noSuchMethod(
        Invocation.getter(#dashboardMsgUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgUrl),
        ),
      ) as String);

  @override
  String get dashboardMsgType => (super.noSuchMethod(
        Invocation.getter(#dashboardMsgType),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgType),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#dashboardMsgType),
        ),
      ) as String);

  @override
  String get signetsPasswordResetUrl => (super.noSuchMethod(
        Invocation.getter(#signetsPasswordResetUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#signetsPasswordResetUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#signetsPasswordResetUrl),
        ),
      ) as String);

  @override
  bool get helloFeatureToggle => (super.noSuchMethod(
        Invocation.getter(#helloFeatureToggle),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get helloApiUrl => (super.noSuchMethod(
        Invocation.getter(#helloApiUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#helloApiUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#helloApiUrl),
        ),
      ) as String);

  @override
  String get helloWebsiteUrl => (super.noSuchMethod(
        Invocation.getter(#helloWebsiteUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#helloWebsiteUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#helloWebsiteUrl),
        ),
      ) as String);

  @override
  _i4.Future<dynamic> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<void> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
