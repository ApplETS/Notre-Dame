// Mocks generated by Mockito 5.4.4 from annotations
// in notredame/test/features/app/storage/mocks/siren_flutter_service_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// Dart imports:
import 'dart:async' as _i4;

// Flutter imports:
import 'package:flutter/cupertino.dart' as _i5;

// Package imports:
import 'package:mockito/mockito.dart' as _i1;
import 'package:pub_semver/pub_semver.dart' as _i2;

import 'package:notredame/features/app/storage/siren_flutter_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVersion_0 extends _i1.SmartFake implements _i2.Version {
  _FakeVersion_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SirenFlutterService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSirenFlutterService extends _i1.Mock
    implements _i3.SirenFlutterService {
  @override
  _i4.Future<_i2.Version> get localVersion => (super.noSuchMethod(
        Invocation.getter(#localVersion),
        returnValue: _i4.Future<_i2.Version>.value(_FakeVersion_0(
          this,
          Invocation.getter(#localVersion),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Version>.value(_FakeVersion_0(
          this,
          Invocation.getter(#localVersion),
        )),
      ) as _i4.Future<_i2.Version>);

  @override
  _i4.Future<_i2.Version> get storeVersion => (super.noSuchMethod(
        Invocation.getter(#storeVersion),
        returnValue: _i4.Future<_i2.Version>.value(_FakeVersion_0(
          this,
          Invocation.getter(#storeVersion),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Version>.value(_FakeVersion_0(
          this,
          Invocation.getter(#storeVersion),
        )),
      ) as _i4.Future<_i2.Version>);

  @override
  _i4.Future<bool> updateIsAvailable() => (super.noSuchMethod(
        Invocation.method(
          #updateIsAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> promptUpdate(
    _i5.BuildContext? context, {
    required String? title,
    required String? message,
    String? buttonUpgradeText = r'Upgrade',
    String? buttonCancelText = r'Cancel',
    bool? forceUpgrade = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #promptUpdate,
          [context],
          {
            #title: title,
            #message: message,
            #buttonUpgradeText: buttonUpgradeText,
            #buttonCancelText: buttonCancelText,
            #forceUpgrade: forceUpgrade,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
