name: Release the application to the stores
on:
  release:
    types: [released]
jobs:
  release_to_store:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [ iOS, Android ]
        include:
          - os: macos-15
            target: iOS
            build_target: ios
            build_args: --no-codesign
            working_directory: ios
            metadata_path: 'fastlane/metadata'
            changelog_path: 'release_notes.txt'
          - os: ubuntu-latest
            target: Android
            build_target: appbundle
            build_args: ''
            working_directory: android
            metadata_path: 'fastlane/metadata/android'
            changelog_path: 'changelogs/default.txt'
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/composite/flutter-setup
        with:
          encrypted-signets-api-cert-password: ${{ secrets.ENCRYPTED_SIGNETS_API_CERT_PASSWORD }}
          encrypted-google-service-password: ${{ secrets.ENCRYPTED_GOOGLE_SERVICE_PASSWORD }}
          encrypted-etsmobile-keystore-password: ${{ secrets.ENCRYPTED_ETSMOBILE_KEYSTORE_PASSWORD }}
          encrypted-keystore-properties-password: ${{ secrets.ENCRYPTED_KEYSTORE_PROPERTIES_PASSWORD }}
          encrypted-android-service-account-credentials-password: ${{ secrets.ENCRYPTED_ANDROID_SERVICE_ACCOUNT_CREDENTIALS_PASSWORD }}
          encrypted-ios-service-account-credentials-password: ${{ secrets.ENCRYPTED_IOS_SERVICE_ACCOUNT_CREDENTIALS_PASSWORD }}
          encrypted-ios-matchfile-password: ${{ secrets.ENCRYPTED_IOS_MATCHFILE_PASSWORD }}
          encrypted-msal-config-password: ${{ secrets.ENCRYPTED_MSAL_CONFIG_PASSWORD }}
          target: ${{ matrix.target }}

      - name: Build the application
        run: flutter build ${{ matrix.build_target }} ${{ matrix.build_args }} --build-number=$(date '+%s') --release
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          APP_HASH: ${{ secrets.APP_HASH }}

      - name: Setup SSH Key to download match repository for iOS only
        if: matrix.target == 'iOS'
        # Copied from https://github.com/maddox/actions/blob/master/ssh/entrypoint.sh
        run: |
          SSH_PATH="$HOME/.ssh"

          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"

          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"

          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"

          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
        env:
          PRIVATE_KEY: ${{ secrets.MATCH_GIT_SSH_KEY }}

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
          working-directory: ${{ matrix.working_directory }}

      - name: Deploy to store
        run: bundle exec fastlane deploy
        working-directory: ${{ matrix.working_directory }}
        env:
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }} # Used only by iOS
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }} # Used only by iOS
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }} # Used only by iOS
